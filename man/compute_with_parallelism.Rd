% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_with_parallelism.R
\name{compute_with_parallelism}
\alias{compute_with_parallelism}
\title{Function to create table from lazy query with specified degree of parallelism}
\usage{
compute_with_parallelism(
  lazy_tbl,
  create_table_name,
  n,
  overwrite = F,
  compress = "high",
  materialize = F
)
}
\arguments{
\item{lazy_tbl}{name of the dbplyr lazy table}

\item{create_table_name}{name of user created table in SQL database}

\item{n}{the degree of parallelism to enforce}

\item{overwrite}{if \code{TRUE}, function will check if table exists, and if it does, will drop it; if \code{FALSE}, will intentionally throw an error if the table already exists.}

\item{compress}{Compression setting for the table: \code{high} = \verb{compress for query high}, \code{low} = \verb{compress for query low}, \code{no} = \code{nocompress} (forced non-compression), \code{NA},\code{NULL} or any other value = compression option not passed to the database, determined by database defaults.}

\item{materialize}{if \code{TRUE}, will additionally add \code{MATERIALIZE} hints}
}
\description{
Compute (a-la dbplyr) a lazy query with specified degree of parallelism. Adds a parallel hint to all SELECT statements: \verb{SELECT /* +PARALLEL(N) */...} The hint is usually taken into account, but as it is only a hint, the database optimizer ultimately makes a final decision as to which degree of parallelism to use, if any. This is based on things like the query itself and the amount of concurrent use.\cr
\cr
If hints are already present in any sub-queries, e.g. included  manually using \code{dbplyr::sql()}, this function will overwrite them.
}
\examples{
\dontrun{
compute_with_parallelism(table_db, "INT646_TABLE_DB", 32)
}
}
